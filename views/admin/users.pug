extends ./layout

block ui
  .container#users
    h1.summary Users
    h6.info
      | Permissions: Give users '*' for full access, 'u' for permission access and 'a' for media access
    input.u-full-width#user-search-box(type='text', placeholder='Search for users...')
    .row
      .three.columns
        b Display Name
      .three.columns
        b Username
      .two.columns
        b Provider
      .four.columns
        b Permissions
    each val in users
      .row.search-target(id='user-' + val.id, data-user=JSON.stringify(val))
        .three.columns
          b.searchable= val.displayName
        .three.columns
          span.searchable= val.username
        .two.columns
          | #{val.provider}
        .four.columns
          input.view(type='text', value=val.permissions, disabled=(val.id==user.id))= val.permissions
          button.apply(onClick='applyPermissions(this)', disabled=(val.id==user.id)) Apply

  script.
    function permissionResult() {
      var data = JSON.parse(this.responseText);
      if (data.error) {
        return console.warn(data.error.message);
      }
      var node = document.querySelector('#user-' + data.id);
      var user = JSON.parse(node.getAttribute('data-user'));
      user.perms = data.perms;
      node.setAttribute('data-user', JSON.stringify(user));
      node.querySelector('input.view').setAttribute('value', data.perms);
      var btn = node.querySelector('button.apply');
      btn.setAttribute('state', 'success');
      setTimeout(function() {
        btn.removeAttribute('state');
      }, 3000);
    }
    function applyPermissions(el) {
      var id = JSON.parse(el.parentNode.parentNode.getAttribute('data-user')).id;
      var permissions = el.parentNode.querySelector('input.view').value;
      var xhr = new XMLHttpRequest();
      xhr.addEventListener('load', permissionResult);
      xhr.open('POST', 'users/perm', true);
      xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
      var id = encodeURIComponent(id);
      var perms = encodeURIComponent(permissions);
      xhr.send('id=' + id + '&perms=' + perms);
    }
    (function() {
      var input = document.getElementById('user-search-box');
      input.onkeyup = function () {
        var filter = input.value.toUpperCase();
        var lis = document.getElementsByClassName('search-target');
        for (var i = 0; i < lis.length; i++) {
            var searchable = lis[i].getElementsByClassName('searchable');
            var results = 0;
            for (var x = 0; x < searchable.length; x++) {
              if (searchable[x].innerHTML.toUpperCase().indexOf(filter) == 0)
                results++;
            }
            if (results > 0)
              lis[i].style.display = 'block';
            else
              lis[i].style.display = 'none';
        }
      }
    })();
